Introducción a Golang
Conociendo el lenguaje

Santiago Nicolás Risaro Sesar
@NickRisaro
Desarrollador GO en Grupo Esfera
@grupoesfera


* ¿Quiénes crearon GO?

- Robert Griesemer, Ken Thompson y Rob Pike iniciaron el proyecto a fines de 2007
- A mediados de 2008 se finaliza el diseño y se termina la primera implementación


.image https://raw.githubusercontent.com/ashleymcnamara/gophers/master/GOPHER%20ACADEMY.png 350 _

* Filosofía y motivaciones

- Los sistemas cambiaron, los lenguajes no

: CAMBIO: No new major systems language in a decade. But much has changed:
: client/server focus, the rise of multi-core CPUs
: Major systems languages were not designed with all these factors in mind. 

- Velocidad de desarrollo

: VELOCIDAD DE DESARROLLO: It takes too long to build software. The tools are slow and are getting slower. 
: Machines have stopped getting faster. Yet software still grows and grows. 
: If we stay as we are, before long software construction will be unbearably slow.

- Repensar el sistemas de tipos

: TIPOS: You can be productive or safe, not both. En GO se busca el intermedio.

- Agregar funcionalidad al lenguaje no lo hace mejor, sólo más grande

: AGREGAR FUNC: Go does not try to be like the other languages. Go does not compete on features. As of Go 1, the language is fixed. 

* ¿Por qué? Go fast!
"Make programming fun again" (Rob Pike)

.image https://imgs.xkcd.com/comics/compiling.png 500 _

* Características principales

- Lenguaje procedural pero con funciones, métodos, interfaces y concurrencia
- La eficiencia de un lenguaje estáticamente tipado con la facilidad de un lenguaje dinámico
- Buen soporte para concurrencia y comunicación entre procesos
- Garbage collector eficiente y sin latencia
- Alta velocidad de compilación y ejecución
- Legibilidad y simplicidad

: No es orientado a objetos pero tiene el concepto de método y polimorfismo
: LEGIBILIDAD: If a language has too many features, you waste time choosing which ones to use. 
: Features add complexity. We want simplicity. Features hurt readability. We want readability. 

.image https://raw.githubusercontent.com/ashleymcnamara/gophers/master/This_is_Fine_Gopher.png 250 _

* Entorno de desarrollo

- Descargar GO de [[https://golang.org/dl/]]
- Descomprimirlo en `/usr/local`
- Editar `.profile`

	# Define GOROOT
	export GOROOT="/usr/local/go"

	# add GOROOT to the PATH
	PATH="$GOROOT/bin:$PATH"

	# declare GOPATH
	export GOPATH="$HOME/go"

	# add GOPATH to the PATH
	PATH="$GOPATH/bin:$PATH"
- Crear la carpeta `$GOPATH/src`

.image images/go-version.png 55 _
.caption Resultado de ejecutar go version

: Las variables GOROOT Y GOPATH son opcionales
: GOROOT: Ubicación de los binarios de GO
: GOPATH: Ubicación de los fuentes, dependencias y código compilado
: Después de editar el .profile reiniciar la sesión

* IDEs

.image https://juncotic.com/wp-content/uploads/2016/09/2000px-Icon-Vim.svg_-768x768.png 150 _ 
.image https://foro.vozidea.com/f-uploads/2017/12/visual-studio-code.png 150 _ 
.image https://images.g2crowd.com/uploads/product/image/large_detail/large_detail_1513169944/goland.png 150 _

* Primer programa

.play -edit hola-mundo.go

* Probar, compilar, ejecutar, instalar

	# Compilar y ejecutar las pruebas que están en el directorio actual
	go test

	# Compilar <fuente>.go (El ejecutable queda en la carpeta en la que está <fuente>.go)
	go build <fuente>.go

	# Compilar y ejecutar <fuente>.go
	go run <fuente>.go  

	# Compilar e instalar el <ruta del paquete> (El ejecutable queda en $GOPATH/bin)
	go install <ruta del paquete>

.image https://raw.githubusercontent.com/ashleymcnamara/gophers/master/MovingGopher.png 250 _

: Ante la duda go help <comando>
: go install gitlab.grupoesfera.com.ar/CAP-00082-GrupoEsfera-GO/src
